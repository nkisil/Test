# This is a basic workflow to help you get started with Actions

name: CI

env: 
 major: 1
 minor: ${{ github.run_number }}
 patch: 0
 muleenv: Development4
 muleversion: 4.4.0-20220622
 mulesrv: vmdmulesrv4

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Maven Cache
        uses: actions/cache@v3.0.11
        with:
          path: /.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: | 
            ${{ runner.os }}-maven-
            
      - name: Setup Java 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '1.8.x'            
      
      - name: Add repo credentials
        uses: s4u/maven-settings-action@v2.4.1
        with:
          servers: |
             [{
               "id": "mule-enterprise",
               "username": "${{ secrets.SS_MAVEN_USER }}",
               "password": "${{ secrets.SS_MAVEN_PASS }}"
             }]
      - name: Print effective maven settings   
        run: mvn help:effective-settings
        
      - name: Configure Versioning in Pom
        run: |
            sudo apt install xmlstarlet -y
            xmlstarlet ed -L -N pom=http://maven.apache.org/POM/4.0.0 -u "/pom:project/pom:version" -v '${version.major}.${version.minor}.${version.patch}' $GITHUB_WORKSPACE/pom.xml  
      
      - name: Build with Maven
        run: mvn clean package --batch-mode -f $GITHUB_WORKSPACE/pom.xml -Dversion.major=$major -Dversion.minor=$minor -Dversion.patch=$patch -DskipTests=true
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: artifacts
          path: target/*.jar
  test:
   needs: build
   runs-on: ubuntu-latest
   
   steps:
       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
  
      - name: Maven Cache
        uses: actions/cache@v3.0.11
        with:
            path: /.m2/repository
            key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
            restore-keys: | 
              ${{ runner.os }}-maven-

      - name: Setup Java 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '1.8.x' 
  
      - name: Configure Versioning in Pom
        run: |
            sudo apt install xmlstarlet -y
            xmlstarlet ed -L -N pom=http://maven.apache.org/POM/4.0.0 -u "/pom:project/pom:version" -v '${version.major}.${version.minor}.${version.patch}' $GITHUB_WORKSPACE/pom.xml  
            
      - name: Test
        run: mvn clean test   
